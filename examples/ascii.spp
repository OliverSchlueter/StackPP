#DEFINE ASCII_UPPERCASE_A 65
#DEFINE ASCII_UPPERCASE_B 66
#DEFINE ASCII_UPPERCASE_C 67
#DEFINE ASCII_UPPERCASE_D 68
#DEFINE ASCII_UPPERCASE_E 69
#DEFINE ASCII_UPPERCASE_F 70
#DEFINE ASCII_UPPERCASE_G 71
#DEFINE ASCII_UPPERCASE_H 72
#DEFINE ASCII_UPPERCASE_I 73
#DEFINE ASCII_UPPERCASE_J 74
#DEFINE ASCII_UPPERCASE_K 75
#DEFINE ASCII_UPPERCASE_L 76
#DEFINE ASCII_UPPERCASE_M 77
#DEFINE ASCII_UPPERCASE_N 78
#DEFINE ASCII_UPPERCASE_O 79
#DEFINE ASCII_UPPERCASE_P 80
#DEFINE ASCII_UPPERCASE_Q 81
#DEFINE ASCII_UPPERCASE_R 82
#DEFINE ASCII_UPPERCASE_S 83
#DEFINE ASCII_UPPERCASE_T 84
#DEFINE ASCII_UPPERCASE_U 85
#DEFINE ASCII_UPPERCASE_V 86
#DEFINE ASCII_UPPERCASE_W 87
#DEFINE ASCII_UPPERCASE_X 88
#DEFINE ASCII_UPPERCASE_Y 89
#DEFINE ASCII_UPPERCASE_Z 90

#DEFINE ASCII_LOWERCASE_A 97
#DEFINE ASCII_LOWERCASE_B 98
#DEFINE ASCII_LOWERCASE_C 99
#DEFINE ASCII_LOWERCASE_D 100
#DEFINE ASCII_LOWERCASE_E 101
#DEFINE ASCII_LOWERCASE_F 102
#DEFINE ASCII_LOWERCASE_G 103
#DEFINE ASCII_LOWERCASE_H 104
#DEFINE ASCII_LOWERCASE_I 105
#DEFINE ASCII_LOWERCASE_J 106
#DEFINE ASCII_LOWERCASE_K 107
#DEFINE ASCII_LOWERCASE_L 108
#DEFINE ASCII_LOWERCASE_M 109
#DEFINE ASCII_LOWERCASE_N 110
#DEFINE ASCII_LOWERCASE_O 111
#DEFINE ASCII_LOWERCASE_P 112
#DEFINE ASCII_LOWERCASE_Q 113
#DEFINE ASCII_LOWERCASE_R 114
#DEFINE ASCII_LOWERCASE_S 115
#DEFINE ASCII_LOWERCASE_T 116
#DEFINE ASCII_LOWERCASE_U 117
#DEFINE ASCII_LOWERCASE_V 118
#DEFINE ASCII_LOWERCASE_W 119
#DEFINE ASCII_LOWERCASE_X 120
#DEFINE ASCII_LOWERCASE_Y 121
#DEFINE ASCII_LOWERCASE_Z 122

#DEFINE ASCII_0 48
#DEFINE ASCII_1 49
#DEFINE ASCII_2 50
#DEFINE ASCII_3 51
#DEFINE ASCII_4 52
#DEFINE ASCII_5 53
#DEFINE ASCII_6 54
#DEFINE ASCII_7 55
#DEFINE ASCII_8 56
#DEFINE ASCII_9 57

#DEFINE ASCII_NULL 0
#DEFINE ASCII_SPACE 32
#DEFINE ASCII_TAB 9
#DEFINE ASCII_CARRIAGE_RETURN 10
#DEFINE ASCII_LINE_FEED 13

function printlnStr
    ; 'f1' - pointer to the start of the string
    ; the string must be null-terminated

    move 1 i

    while i = 1
        memget a    ; read char
        pop b       ; put char in 'b'

        if b = ASCII_NULL   ; check if char is NULL
            move 0 i        ; exit loop
        else
            aprint b    ; print char
            add a 1     ; go to next char
        end
    end

    aprint ASCII_CARRIAGE_RETURN    ; print newline
end
