#INCLUDE ascii.spp

; exits the program
; f1 - the exit code
function exit
    move f1 a
    syscall 1
end


; prints a buffer to standard output
; note that the string must be null-terminated
; f1 - the pointer to the start of the buffer
function print
    move 1 i
    move f1 f2

    while i = 1
        memget f2   ; read char
        pop b       ; put char in 'b'

        if b = ASCII_NUL    ; check if char is NULL
            move 0 i        ; exit loop
            break
        else
           inc f2   ; increase ptr
           inc c    ; increase counter
        end
    end

    move 1 a    ; use standard output
    move f1 b
    syscall 2
end

; prints a buffer to standard output
; f1 - the pointer to the start of the buffer
; f2 - the size of the buffer
function print_buf
    move 1 a    ; use standard output
    move f1 b
    move f2 c
    syscall 2
end

; writes a buffer of chars/bytes into a file
; f1 - pointer to the path
; f2 - pointer to the data
; f3 - size of the data
function write_file
    move f1 a
    move f2 b
    move f3 c
    move 0 d    ; offset
    syscall 5   ; write file syscall
end

; f1 - destination ptr
; f2 - source ptr
; f3 - size
function memmove
    push f1

    while f3 > 0
        ; get value at source
        memget f2
        pop f4

        ; set value at destination
        memset f1 f4

        ; update pointers and index
        add f1 1
        add f2 1
        subtract f3 1
    end

    pop f1
end